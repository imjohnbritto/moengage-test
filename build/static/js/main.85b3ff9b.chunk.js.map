{"version":3,"sources":["components/pages/Overview/index.config.tsx","redux/reducers/APP_CONFIG/index.ts","redux/reducers/filters_reducer/index.ts","redux/reducers/index.ts","redux/store.ts","containers/PersistedRouteRedirectorContainer/index.tsx","components/Error/index.tsx","hooks/useRoutesConfig/index.tsx","components/Routes/config/index.ts","components/Routes/index.tsx","containers/withMediaQueryContainer/index.tsx","assets/DownloadFile.js","components/Header/index.tsx","components/App/AppView/index.tsx","containers/AppViewContainer/index.tsx","components/Loader/index.tsx","components/App/index.tsx","components/DetectResizing/index.tsx","reportWebVitals.ts","index.tsx"],"names":["Overview","React","lazy","overview_CONFIG","pathname","component","data","servicesArr","uri","requestID","APP_CONFIG_ACTION_TYPE","initialState","ACTIVE","ROUTE","EXPANDED_PAGE","FILTERS_ACTION","APP_CONFIG_REDUCER","state","action","type","CHANGE_ACTIVE_ROUTE","payload","activeExpandedPage","activeSortBy","filtersReducer","CHANGE_FILTERS","CHANGE_PAGE_FILTERS","CLEAR_PAGE_FILTERS","rootReducer","combineReducers","APP_CONFIG","filters","persistConfig","key","storage","blacklist","persistedReducer","persistReducer","middlewares","reduxThunk","configureStore","store","createStore","applyMiddleware","persistor","persistStore","PersistedRouteRedirectorContainer","connect","persistedRoute","this","props","redirectTo","Component","defaultProps","memo","Error","useRoutesConfig","Routes","ROUTES_CONFIG","filter","map","exact","path","render","createRouteComponent","history","isError","msgTitle","btnLabel","withMediaQueryContainerHOC","WrappedComponent","isDesktop","messages","DownloadFile","className","href","download","Header","withMediaQueryContainer","Children","children","child","cloneElement","Loader","App","fallback","DetectResizing","checkIfDesktopView","window","innerWidth","addEventListener","removeEventListener","PureComponent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","routerProps","push","location","document","getElementById"],"mappings":"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","file":"static/js/main.85b3ff9b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { IServices } from \"./index.types\";\r\n\r\nconst Overview = React.lazy(() => import(\"./index\"));\r\n\r\nconst overview_CONFIG = {\r\n    pathname: \"/\",\r\n    component: <Overview data={\"\"}/>,\r\n};\r\n\r\nexport const servicesArr: IServices[] = [\r\n    {\r\n        uri: '/get_highlight',\r\n        requestID: 'Highlights'\r\n    },\r\n    {\r\n        uri: '/get_buyer',\r\n        requestID: 'Buyers'\r\n    },\r\n    {\r\n        uri: '/get_country',\r\n        requestID: 'Countries'\r\n    },\r\n    {\r\n        uri: '/get_income',\r\n        requestID: 'Income'\r\n    }\r\n]\r\n\r\nexport default overview_CONFIG;","import overview_CONFIG from \"../../../components/pages/Overview/index.config\";\r\n\r\nexport const initialState: any = {\r\n  ACTIVE: {\r\n    ROUTE: overview_CONFIG.pathname,\r\n    EXPANDED_PAGE: {}\r\n  }\r\n};\r\n\r\ninterface IAppConfigActive {\r\n  ROUTE: string;\r\n  EXPANDED_PAGE: any\r\n}\r\n\r\nexport interface IAppConfigReducer {\r\n  ACTIVE: IAppConfigActive;\r\n}\r\n\r\nexport enum APP_CONFIG_ACTION_TYPE {\r\n  CHANGE_ACTIVE_ROUTE = \"CHANGE_ACTIVE_ROUTE\"\r\n}\r\n\r\nconst APP_CONFIG_REDUCER = (\r\n  state: IAppConfigReducer = initialState,\r\n  action: any\r\n): IAppConfigReducer => {\r\n  switch (action.type) {\r\n    case APP_CONFIG_ACTION_TYPE.CHANGE_ACTIVE_ROUTE: {\r\n      return { ...state, ...action.payload };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default APP_CONFIG_REDUCER;","import { IFiltersReducer } from \"./index.types\";\r\n\r\nexport enum FILTERS_ACTION {\r\n    CHANGE_FILTERS = \"CHANGE_FILTERS\",\r\n    CHANGE_PAGE_FILTERS = \"CHANGE_PAGE_FILTERS\",\r\n    CLEAR_PAGE_FILTERS = \"CLEAR_PAGE_FILTERS\",\r\n    FETCH_CURRENCY_RATE_REQUESTED = \"FETCH_CURRENCY_RATE_REQUESTED\",\r\n    FETCH_CURRENCY_RATE_SUCCESS = \"FETCH_CURRENCY_RATE_SUCCESS\"\r\n  }\r\n\r\nexport const initialState: IFiltersReducer = {\r\n  activeExpandedPage: {},\r\n  activeSortBy: [],\r\n};\r\n\r\nconst filtersReducer = (state: IFiltersReducer = initialState, action: any): IFiltersReducer => {\r\n  switch (action.type) {\r\n    case FILTERS_ACTION.CHANGE_FILTERS: {\r\n      return { ...state, ...action.payload };\r\n    }\r\n\r\n    case FILTERS_ACTION.CHANGE_PAGE_FILTERS: {\r\n      return { ...state };\r\n    }\r\n\r\n    case FILTERS_ACTION.CLEAR_PAGE_FILTERS: {\r\n\r\n      return {\r\n        ...state\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default filtersReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport APP_CONFIG_REDUCER from \"./APP_CONFIG\";\r\nimport filtersReducer from \"./filters_reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  APP_CONFIG: APP_CONFIG_REDUCER,\r\n  filters: filtersReducer\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from \"redux\";\r\nimport reduxThunk from \"redux-thunk\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  blacklist: [\"data\"]\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\nconst middlewares = [reduxThunk];\r\n\r\nconst configureStore = () => {\r\n  let store = createStore(persistedReducer, applyMiddleware(...middlewares));\r\n  let persistor = persistStore(store);\r\n\r\n  return { store, persistor };\r\n};\r\n\r\nexport default configureStore();\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\n\r\nexport interface PersistedRouteRedirectorContainerProps {\r\n  redirectTo: (persistedPathname: string) => void;\r\n  pathname: string;\r\n  persistedRoute: string;\r\n  dispatch?: Dispatch<any>;\r\n}\r\n\r\nexport interface IStoreState {\r\n    APP_CONFIG: any;\r\n    filters: any;\r\n  }\r\n\r\nconst mapStateToProps = ({ APP_CONFIG }: IStoreState) => {\r\n  return {\r\n    persistedRoute: APP_CONFIG.ACTIVE.ROUTE\r\n  };\r\n};\r\n\r\n@(connect(mapStateToProps) as any)\r\nclass PersistedRouteRedirectorContainer extends Component<PersistedRouteRedirectorContainerProps, {}> {\r\n  static defaultProps = {\r\n    persistedRoute: \"\"\r\n  };\r\n\r\n  componentWillMount() {\r\n    const { redirectTo, pathname, persistedRoute } = this.props;\r\n\r\n    if (pathname !== persistedRoute) {\r\n      redirectTo(persistedRoute);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default React.memo(PersistedRouteRedirectorContainer);\r\n","import React from \"react\";\r\n\r\nconst Error: React.FunctionComponent<any> = () => {\r\n    return (<p>Error</p>)\r\n}\r\n\r\nexport default Error;","import { getRoutesConfig } from \"../../components/Routes/config\";\r\n\r\n// todo typing\r\nconst useRoutesConfig = (): any[] => {\r\n  return getRoutesConfig();\r\n};\r\n\r\nexport default useRoutesConfig;","import overview_CONFIG from \"../../pages/Overview/index.config\";\r\nexport const getRoutesConfig = (): any[] => {\r\n    return [\r\n        overview_CONFIG\r\n    ]\r\n}","import React, { ReactNode } from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { IRoute } from \"./index.types\";\r\nimport Error from \"../Error\";\r\n// import { SvgIconType } from \"components/shared/SvgIcon/index.types\";\r\nimport useRoutesConfig from \"../../hooks/useRoutesConfig\";\r\n\r\nconst Routes: React.FC<{}> = () => {\r\n  const ROUTES_CONFIG = useRoutesConfig();\r\n\r\n  // todo typing\r\n  const createRouteComponent = (pathname: string, component: ReactNode) => {\r\n    return <Route key={pathname} exact={true} path={pathname} render={() => component} />;\r\n  };\r\n\r\n  const renderMainRoutes = (): ReactNode[] => {\r\n    return ROUTES_CONFIG.filter(({ component }: IRoute | any) => component).map(({ pathname, component }: any) => {\r\n      if (component) {\r\n        return createRouteComponent(pathname, component);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Switch>\r\n      {renderMainRoutes()}\r\n      <Route\r\n        render={({ history }: any) => {\r\n          return (\r\n            <Error\r\n              isError={true}\r\n              msgTitle=\"Page not found\"\r\n            //   svgType={SvgIconType.ERROR_NOT_FOUND}\r\n              btnLabel=\"Back\"\r\n            />\r\n          );\r\n        }}\r\n      />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\n  import { connect } from \"react-redux\"; \r\n\r\nconst withMediaQueryContainerHOC = () => (WrappedComponent: any) => {\r\nconst WithMediaQueryContainerHOC = (props: any) => {\r\n  return <WrappedComponent {...props} />\r\n}\r\n\r\nconst mapStateToProps = ({ messages }: any) => ({\r\n    isDesktop: messages\r\n  });\r\n\r\n  return connect(mapStateToProps)(WithMediaQueryContainerHOC as any);\r\n};\r\n\r\nexport default withMediaQueryContainerHOC as any;","import React from 'react';\r\nimport './DownloadFile.scss';\r\n\r\n\r\nconst DownloadFile = () => {\r\n    return (\r\n        <div className=\"DownloadFile-wrapper btn\">\r\n            <a href=\"../../api/assignment.json\" download=\"assignment.postman_collection.json\">\r\n              <span>Download Postman Collection</span>\r\n</a>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DownloadFile;","import React from 'react';\r\nimport DownloadFile from '../../assets/DownloadFile';\r\nimport './header.scss';\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"Header-wrapper\">\r\n            <h1 className=\"Header-text\">ABC College of engineering</h1>\r\n            <DownloadFile />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport withMediaQueryContainer from \"../../../containers/withMediaQueryContainer/\";\r\nimport Header from '../../Header';\r\n\r\nconst AppView: React.FunctionComponent<any> = (props) => {\r\n\r\n  const renderChildren = () => {\r\n    return React.Children.map(props.children, (child: any) => {\r\n      return React.cloneElement(child, {});\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      {renderChildren()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withMediaQueryContainer()(AppView);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport AppView from \"../../components/App/AppView\";\r\n\r\nconst AppViewContainer: React.FunctionComponent<any> = (props) => {\r\n\r\n    const renderChildren = () => {\r\n        return React.Children.map(props.children, (child: any) => {\r\n            return React.cloneElement(child, {});\r\n        });\r\n    };\r\n\r\n    const getAppConfig = () => {\r\n        return {\r\n            ACTIVE: {\r\n            }\r\n          };\r\n    }\r\n\r\n    return (<AppView APP_CONFIG={getAppConfig()}>{renderChildren()}</AppView>)\r\n}\r\n\r\nconst mapStateToProps = ({ APP_CONFIG, messages }: any) => ({\r\n    APP_CONFIG\r\n  });\r\n  \r\n\r\nexport default connect(mapStateToProps)(AppViewContainer);","import React from \"react\";\r\n\r\nconst Loader: React.FunctionComponent<any> = () => {\r\n    return (<p>Loader</p>)\r\n}\r\n\r\nexport default Loader;","import React, { Suspense } from \"react\";\r\nimport Routes from \"../Routes\";\r\n// import DrilldownsContainer from \"containers/DrilldownsContainer\";\r\nimport AppViewContainer from \"../../containers/AppViewContainer\";\r\nimport Loader from \"../Loader\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <AppViewContainer>\r\n        <Suspense fallback={<Loader />}>\r\n          <Routes />\r\n        </Suspense>\r\n      </AppViewContainer>\r\n      {/* <DrilldownsContainer /> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App","import { PureComponent } from \"react\";\r\n// import { handleWindowResize } from \"actionCreators/messages_actionCreator\";\r\nimport { Dispatch } from \"redux\";\r\nimport withMediaQueryContainerHOC from \"../../containers/withMediaQueryContainer\";\r\n\r\ninterface IDetectResizingProps {\r\n  dispatch: Dispatch<any>;\r\n  isDesktop: boolean;\r\n}\r\n\r\nclass DetectResizing extends PureComponent<IDetectResizingProps, {}> {\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.checkIfDesktopView);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.checkIfDesktopView);\r\n  }\r\n\r\n  checkIfDesktopView = () => {\r\n    const isDesktopAfterResize = window.innerWidth > 960;\r\n\r\n    if (this.props.isDesktop !== isDesktopAfterResize) {\r\n    //   this.props.dispatch(handleWindowResize(isDesktopAfterResize));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default withMediaQueryContainerHOC()(DetectResizing);\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/es/integration/react';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport configureStore from './redux/store';\r\nimport PersistedRouteRedirectorContainer from \"./containers/PersistedRouteRedirectorContainer\";\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport DetectResizing from \"./components/DetectResizing\";\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst { persistor, store } = configureStore;\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n  <Provider store={store}>\r\n    <PersistGate persistor={persistor}>\r\n      <BrowserRouter>\r\n        <>\r\n          {/* taking info from redux persist about last active route */}\r\n          <Route>\r\n            {(routerProps: any) => (\r\n              <PersistedRouteRedirectorContainer\r\n                redirectTo={routerProps.history.push}\r\n                pathname={routerProps.location.pathname}\r\n              />\r\n            )}\r\n          </Route>\r\n          <DetectResizing />\r\n          <App />\r\n        </>\r\n      </BrowserRouter>\r\n    </PersistGate>\r\n  </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}